/*
 View: can not contain any data, but can contain the queries retrieve from data
        reusable, can expose only part of the table

 CREATE VIEW:
        CREATE VIEW VIEWNAME AS STATEMENT ;
 REPLACE VIEW:
        CREATE OR REPLACE VIEW VIEWNAME AS STATEMENT ;
 DROPPING VIEW:
        DROP VIEW VIEWNAME ;
 */

SELECT *
FROM EMPLOYEES ;

SELECT LAST_NAME||' '||FIRST_NAME AS "FULL NAME"
FROM EMPLOYEES ;

CREATE VIEW "EMPLOYEE INFO" AS SELECT LAST_NAME||' '||FIRST_NAME AS "FULL NAME"
FROM EMPLOYEES ;

SELECT * FROM "EMPLOYEE INFO";


SELECT LAST_NAME||' '||FIRST_NAME AS "FULL NAME",
       LOWER(EMAIL||'@CYBERTEK.COM') AS "EMAIL"
FROM EMPLOYEES ;

CREATE OR REPLACE VIEW "EMPLOYEE INFO" AS SELECT LAST_NAME||' '||FIRST_NAME AS "FULL NAME",
                                                 LOWER(EMAIL||'@CYBERTEK.COM') AS "EMAIL"
                                          FROM EMPLOYEES ;

SELECT * FROM "EMPLOYEE INFO";

DROP VIEW "EMPLOYEE INFO" ; -- IT IS GONE

/*
 CREATE TABLE:

    SYNTAX:
        CREATE TABLE TABLENAME(
            COLUMNNAME1 DATATYPE CONSTRAINT,
            COLUMNNAME2 DATATYPE CONSTRAINT
            );

 CONSTRAINT IS NOT MANDATORY
 INSERT:
     INSERT INTO TABLENAME(COLUMN1, COLUMN2, ...)
     VALUES(VALUE1, VALUE2),(VALUE1, VALUE2), ...;
UPDATE:
        UPDATE TABLENAME
        SET COLUMN1 = VALUE1,
            COLUMN2 = VALUE2, ...
        WHERE CONDITION;
 DELETE: SPECIFIC ROW
        DELETE FROM TABLENAME
        WHERE CONDITION;
COMMIT:
     COMMIT WORK; OR COMMIT;

 ALTER:
    ADD COLUMN:
        ALTER TABLE TABLENAME ADD COLUMNNAME DATATYPE;
    RENAME COLUMN:
        ALTER TABLE TABLENAME RENAME COLUMN OLDCOLUMNNAME TO NEWCOLUMNNAME;
    DROP COLUMN:
        ALTER TABLE TABLENAME DROP COLUMN COLUMNNAME ;
    RENAME TABLE:
        ALTER TABLE TABLENAME RENAME TO NEWTABLENAME;
 */

CREATE TABLE ADDRESS(
  ADDRESS_ID INTEGER PRIMARY KEY ,
  ADDRESS VARCHAR(50) NOT NULL,
  PHONE INTEGER
);

INSERT INTO ADDRESS(ADDRESS_ID, ADDRESS, PHONE)
            VALUES(10, 'LEE HIGH WAY', 123456);
INSERT INTO ADDRESS(ADDRESS_ID, ADDRESS, PHONE)
            VALUES(12, 'BALLTOWN RD', 98765);

CREATE TABLE CUSTOMER(
    CUSTOMER_ID INTEGER PRIMARY KEY ,
    FIRST_NAME VARCHAR(30) NULL ,
    ADDRESS_ID INTEGER REFERENCES ADDRESS(ADDRESS_ID) -- FOREIGN KEEY
);
--FOREIGN KEY: NEED TO HAVE PRIMARY KEY, USE REFERENCES KEYWORD THEN TABLENAME(COLUMNNAME THAT HAVE PRIMARY KEY)
INSERT INTO CUSTOMER(CUSTOMER_ID, FIRST_NAME, ADDRESS_ID)
            VALUES (1, 'MUHTAR', 10); -- ADDRESS ID NEED TO MATCH WITH ADDRESS ID FROM ADDRESS TABLE

INSERT INTO CUSTOMER(CUSTOMER_ID, FIRST_NAME, ADDRESS_ID) VALUES (2, 'JOHN', 12);

UPDATE CUSTOMER
SET CUSTOMER_ID=3
WHERE FIRST_NAME = 'JOHN';

UPDATE CUSTOMER
SET CUSTOMER_ID= 4
WHERE ADDRESS_ID = 10;

DELETE FROM CUSTOMER
WHERE CUSTOMER_ID =3 AND ADDRESS_ID =12;

COMMIT WORK;

-- ADD COLUMN
ALTER TABLE CUSTOMER ADD "LAST_NAME" VARCHAR(20);

-- RENAME COLUMN
ALTER TABLE CUSTOMER RENAME COLUMN "LAST_NAME" TO "CITY" ;

UPDATE CUSTOMER
SET CITY='MIAMI'
WHERE FIRST_NAME = 'MUHTAR';

INSERT INTO CUSTOMER(CUSTOMER_ID, FIRST_NAME, ADDRESS_ID) VALUES (2,'JOHN',12) ;

UPDATE CUSTOMER
SET CITY = 'COLORADO'
WHERE FIRST_NAME = 'JOHN';
--DROP COLUMN
ALTER TABLE CUSTOMER DROP COLUMN CITY ;

--RENAME TABLE:
ALTER TABLE CUSTOMER RENAME TO SHOPPERS ;
SELECT * FROM CUSTOMER; -- NO LONGER EXIST AFTER RENAMING
SELECT * FROM SHOPPERS;

COMMIT WORK;

SELECT * FROM ADDRESS;

